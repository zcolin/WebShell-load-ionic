{"version":3,"sources":["../../src/pages/arcgis/arcgis.module.ts","../../src/pages/arcgis/arcgis.ts","../../node_modules/esri-loader/dist/umd/esri-loader.js"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,cAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,uCAAuC,wBAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,gCAAgC,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,cAAc;;AAE5D,CAAC;AACD","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ArcgisPage } from './arcgis';\n\n@NgModule({\n  declarations: [\n    ArcgisPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ArcgisPage),\n  ],\n})\nexport class ArcgisPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/arcgis/arcgis.module.ts","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Platform, IonicPage } from 'ionic-angular';\nimport { loadModules } from 'esri-loader';\n\n@IonicPage()\n@Component({\n  selector: 'page-arcgis',\n  templateUrl: 'arcgis.html'\n})\nexport class ArcgisPage {\n\n  @ViewChild('map')\n  mapEl: ElementRef;\n  mapView: any = null;\n\n  constructor(public platform: Platform) {\n    platform.ready().then(() => {\n      this.initMap();\n    });\n  }\n\n  initMap() {\n    let latitude: number = 0, longitude: number = 0;\n    const options = {\n      enableHighAccuracy: true, // use any allowed location provider\n      timeout: 60000            // it can take quite a while for a cold GPS to warm up\n    };\n\n    navigator.geolocation.watchPosition(position => {\n      latitude = position.coords.latitude;\n      longitude = position.coords.longitude;\n      // Center map after it has been initialized\n      if (this.mapView != null) {\n        console.log(\"Centering map: \" + latitude + \", \" + longitude);\n        this.mapView.center = [longitude, latitude];\n      }\n    }, error => {\n      switch (error.code) {\n        case error.PERMISSION_DENIED:\n          console.error(\"User denied the request for Geolocation.\");\n          break;\n        case error.POSITION_UNAVAILABLE:\n          console.error(\"Location information is unavailable.\");\n          break;\n        case error.TIMEOUT:\n          console.error(\"The request to get user location timed out.\");\n          alert(\"Unable to start geolocation. Check application settings.\");\n          break;\n      }\n    }, options);\n\n    // Load the mapping API modules\n    return loadModules([\n      \"esri/config\",\n      \"esri/Map\",\n      \"esri/views/MapView\",\n      \"esri/layers/WMTSLayer\",\n      \"esri/widgets/LayerList\",\n      \"dojo/domReady!\"\n    ]).then(([esriConfig, Map, MapView, WMTSLayer, LayerList]) => {\n      console.log(\"Geo: starting map\");\n      let map = new Map({\n        basemap: 'streets'\n      });\n\n      this.mapView = new MapView({\n        // create the map view at the DOM element in this component\n        container: \"mapDiv\",\n        center: [15, 65],\n        zoom: 4,\n        map: map\n      });\n    }).catch(err => {\n      console.log(\"ArcGIS: \" + err);\n    });\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/arcgis/arcgis.ts","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.esriLoader = global.esriLoader || {})));\n}(this, (function (exports) { 'use strict';\n\n/*\n  Copyright 2017 Esri\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\nvar isBrowser = typeof window !== 'undefined';\nvar DEFAULT_URL = 'https://js.arcgis.com/4.6/';\n// this is the url that is currently being, or already has loaded\nvar _currentUrl;\nfunction createScript(url) {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    script.setAttribute('data-esri-loader', 'loading');\n    return script;\n}\nfunction createStylesheetLink(url) {\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = url;\n    return link;\n}\n// add a one-time load handler to script\n// and optionally add a one time error handler as well\nfunction handleScriptLoad(script, callback, errback) {\n    var onScriptError;\n    if (errback) {\n        // set up an error handler as well\n        onScriptError = handleScriptError(script, errback);\n    }\n    var onScriptLoad = function () {\n        // pass the script to the callback\n        callback(script);\n        // remove this event listener\n        script.removeEventListener('load', onScriptLoad, false);\n        if (onScriptError) {\n            // remove the error listener as well\n            script.removeEventListener('error', onScriptError, false);\n        }\n    };\n    script.addEventListener('load', onScriptLoad, false);\n}\n// add a one-time error handler to the script\nfunction handleScriptError(script, callback) {\n    var onScriptError = function (e) {\n        // reject the promise and remove this event listener\n        callback(e.error || new Error(\"There was an error attempting to load \" + script.src));\n        // remove this event listener\n        script.removeEventListener('error', onScriptError, false);\n    };\n    script.addEventListener('error', onScriptError, false);\n    return onScriptError;\n}\n// allow consuming libraries to provide their own Promise implementations\nvar utils = {\n    Promise: isBrowser ? window['Promise'] : undefined\n};\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// TODO: export this function?\n// check if the css url has been injected or added manually\nfunction getCss(url) {\n    return document.querySelector(\"link[href*=\\\"\" + url + \"\\\"]\");\n}\n// has ArcGIS API been loaded on the page yet?\nfunction isLoaded() {\n    var globalRequire = window['require'];\n    // .on() ensures that it's Dojo's AMD loader\n    return globalRequire && globalRequire.on;\n}\n// lazy load the CSS needed for the ArcGIS API\nfunction loadCss(url) {\n    var link = getCss(url);\n    if (!link) {\n        // create & load the css library\n        link = createStylesheetLink(url);\n        document.head.appendChild(link);\n    }\n    return link;\n}\n// load the ArcGIS API on the page\nfunction loadScript(options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = DEFAULT_URL;\n    }\n    return new utils.Promise(function (resolve, reject) {\n        var script = getScript();\n        if (script) {\n            // the API is already loaded or in the process of loading...\n            // NOTE: have to test against scr attribute value, not script.src\n            // b/c the latter will return the full url for relative paths\n            var src = script.getAttribute('src');\n            if (src !== options.url) {\n                // potentially trying to load a different version of the API\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded (\" + src + \").\"));\n            }\n            else {\n                if (isLoaded()) {\n                    // the script has already successfully loaded\n                    resolve(script);\n                }\n                else {\n                    // wait for the script to load and then resolve\n                    handleScriptLoad(script, resolve, reject);\n                }\n            }\n        }\n        else {\n            if (isLoaded()) {\n                // the API has been loaded by some other means\n                // potentially trying to load a different version of the API\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded.\"));\n            }\n            else {\n                // this is the first time attempting to load the API\n                if (options.css) {\n                    // load the css before loading the script\n                    loadCss(options.css);\n                }\n                if (options.dojoConfig) {\n                    // set dojo configuration parameters before loading the script\n                    window['dojoConfig'] = options.dojoConfig;\n                }\n                // create a script object whose source points to the API\n                script = createScript(options.url);\n                _currentUrl = options.url;\n                // once the script is loaded...\n                handleScriptLoad(script, function () {\n                    // update the status of the script\n                    script.setAttribute('data-esri-loader', 'loaded');\n                    // return the script\n                    resolve(script);\n                }, reject);\n                // load the script\n                document.body.appendChild(script);\n            }\n        }\n    });\n}\n// wrap dojo's require() in a promise\nfunction requireModules(modules) {\n    return new utils.Promise(function (resolve, reject) {\n        // If something goes wrong loading the esri/dojo scripts, reject with the error.\n        var errorHandler = window['require'].on('error', reject);\n        window['require'](modules, function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // remove error handler\n            errorHandler.remove();\n            // Resolve with the parameters from dojo require as an array.\n            resolve(args);\n        });\n    });\n}\n// returns a promise that resolves with an array of the required modules\n// also will attempt to lazy load the ArcGIS API if it has not already been loaded\nfunction loadModules(modules, loadScriptOptions) {\n    if (loadScriptOptions === void 0) { loadScriptOptions = {}; }\n    if (!isLoaded()) {\n        // script is not yet loaded\n        if (!loadScriptOptions.url && _currentUrl) {\n            // alredy in the process of loading, so default to the same url\n            loadScriptOptions.url = _currentUrl;\n        }\n        // attept to load the script then load the modules\n        return loadScript(loadScriptOptions).then(function () { return requireModules(modules); });\n    }\n    else {\n        // script is already loaded, just load the modules\n        return requireModules(modules);\n    }\n}\n// export a namespace to expose all functions\nvar esriLoader = {\n    getScript: getScript,\n    isLoaded: isLoaded,\n    loadModules: loadModules,\n    loadScript: loadScript,\n    utils: utils\n};\n\nexports.utils = utils;\nexports.getScript = getScript;\nexports.isLoaded = isLoaded;\nexports.loadCss = loadCss;\nexports.loadScript = loadScript;\nexports.loadModules = loadModules;\nexports['default'] = esriLoader;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=esri-loader.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/esri-loader/dist/umd/esri-loader.js\n// module id = 448\n// module chunks = 1"],"sourceRoot":""}